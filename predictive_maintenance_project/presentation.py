import streamlit as st
import reveal_slides as rs


def presentation_page():
    st.title("Презентация проекта")
    # Содержание презентации в формате Markdown
    presentation_markdown = """
# Прогнозирование отказов оборудования
---
 ## Введение
- **Задача**: Предсказание отказов оборудования (бинарная классификация).
- **Датасет**: AI4I 2020 Predictive Maintenance Dataset (10 000 записей, 14 признаков).
- **Цель**: предсказать отказ оборудования (Target = 1) или его отсутствие
(Target = 0).
---
## Этапы работы
 1. Загрузка данных.
 2. Предобработка данных.
 3. Маштабирование и кодирование признаков.
 4. Обучение модели.
 5. Оценка модели.
 5. Визуализация результатов.
---
## Streamlit-приложение
- **Streamlit**: библиотека для создания веб-приложений на Python.
- **Функционал**:
1) Загрузка CSV-файла с данными.
2) Выбор модели машинного обучения.
3) Отображение метрик качества модели.
4) Визуализация результатов.
---
## Описание проекта
- **Цель**: разработать веб-приложение для предсказания отказов оборудования.
- **Используемые технологии**: Python, Streamlit, машинное обучение.
- **Структура проекта**:
- app.py: основной файл приложения;
- analysis_and_model.py: анализ данных и обучение моделей;
- presentation.py: создание презентации с помощью reveal.js;
- requirements.txt: зависимости проекта;
- README.md: документация проекта.
---
## Модели машинного обучения
- **Logistic Regression**: базовая модель для бинарной классификации.
- **Random Forest**: ансамблевая модель, хорошо справляется с нелинейными зависимостями.
- **SVM**: эффективна для высокоразмерных данных.
- **XGBoost**: градиентный бустинг, показывает высокую точность на многих задачах.
---
## Результаты моделей
| Модель              | Accuracy (%) | AUC (%)   |
|---------------------|--------------|-----------|
| Logistic Regression | 97.30        | 89.30     |
| SVM                 | 97.70        | 95.20     |
| Random Forest       | 98.35        | 95.49     |
| **XGBoost**         | **98.50**    | **97.27** |
---
## Выводы
- XGBoost демонстрирует наилучшие результаты (Accuracy: 98.5%, AUC: 97.27%).
- Рекомендуется использовать XGBoost для прогнозирования отказов.
---
## Благодарю за внимание!
 """
    # Настройки презентации
    with st.sidebar:
        st.header("Настройки презентации")
    theme = st.selectbox("Тема", ["black", "white", "league", "beige",
                                  "sky", "night", "serif", "simple",
                                  "solarized"])
    height = st.number_input("Высота слайдов", value=500)
    transition = st.selectbox("Переход", ["slide", "convex", "concave",
                                          "zoom", "none"])
    plugins = st.multiselect("Плагины", ["highlight", "katex",
                                         "mathjax2", "mathjax3", "notes",
                                         "search", "zoom"], [])
    # Отображение презентации
    rs.slides(
        presentation_markdown,
        height=height,
        theme=theme,
        config={
            "transition": transition,
            "plugins": plugins,
        },
        markdown_props={"data-separator-vertical": "^--$"},
    )
